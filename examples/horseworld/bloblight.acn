# Blob light source, uses transparency and shaded sprite
+Shape
	draw: 'Polygon'
	transparent: true
	positions: +Xyzs"
		0.0,  1.0, 0.0,
		1.0,  1.0, 0.0,
		1.0, 0.0, 0.0,
		0.0,  0.0, 0.0"
	uvs: +Uvs"
		0.0, 1.0,
		1.0, 1.0,
		1.0, 0.0,
		0.0, 0.0"
	InnerColor: +Color(1.0, 1.0, 0.75, 1.0)
	OuterColor: +Color(0.5, 0.5, 0.375, 0.0)
	RadiusInner: 0.25
	RadiusOuter: 0.45

	shader: +Shader
		uniforms: +List('InnerColor', 'OuterColor', 'RadiusInner', 'RadiusOuter', 'mvpmatrix')
		attributes: +List('positions', 'uvs')
		vertex: "
			#version 130\n
			in vec3 position;
			in vec2 uv;
			out vec2 UV;
			uniform mat4 mvpmatrix;
			void main()
			{
			UV = uv;
			gl_Position = mvpmatrix*vec4(position,1.0);
			}"
		fragment: "
			#version 130\n
			in vec2 UV;
			out vec4 FragColor;
			uniform vec4 InnerColor;
			uniform vec4 OuterColor;
			uniform float RadiusInner;
			uniform float RadiusOuter;
			void main() {
			float dx = UV.x - 0.5;
			float dy = UV.y - 0.5;
			float dist = sqrt(dx * dx + dy * dy);
			FragColor = mix( InnerColor, OuterColor, smoothstep( RadiusInner, RadiusOuter, dist ));
			}"

