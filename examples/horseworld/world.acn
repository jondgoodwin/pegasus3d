$ = +World
	scene: +Group
		origin: +Xyz(0., 0., 0.)
		parts: +List using '<<'
			# Generic lighting and shader for parts using a single light source
			# with ambient lighting
			+Light
				origin: +Xyz(-3.5, 5.5, 10.0)
				ambient: +Color(0.5882, 0.5882, 0.5882, 1.0)
				lightColor: +Color(1.0, 1.0, 1.0, 1.0)
			# Skybox
			Shape.NewCube(100.)
				shader: @shaders/skybox_shader
				tex: +Texture
					mapping: 'CubeMap'
					imagePosX: @morning_RT.jpg
					imageNegX: @morning_LF.jpg
					imagePosY: @morning_UP.jpg
					imageNegY: @morning_DN.jpg
					imagePosZ: @morning_FR.jpg
					imageNegZ: @morning_BK.jpg
			# Ground terrain in 100 segments, with uvmult at 15.
			Shape.NewPlane(100,15.)
				origin: +Xyz(0., 0., 0.)
				scale: +Xyz(50.,50.,50.)
				diffuse: +Color(0.5882, 0.5882, 0.5882, 1.0)
				tex: +Texture
					image: @grass.jpg
					wrapS: 'Repeat'
					wrapT: 'Repeat'
				shader: @shaders/diffuse_texshader
			# Paddock with horses
			+Group
				origin: +Xyz(-2.0, 0.0, -4.0)
				parts: +List using '<<'
					# Paddock fence
					+Shape
						color: +Color(0.502, 0.0, 0.125)
						shader: @shaders/emitonecolor_shader
						positions: +Xyzs"
							3.7, 1.3, -4.0, 0.0, 0.90, -4.0, 0.15, 0.75, -4.0,
							3.7, 0.2, -4.0, 0.0, 0.60, -4.0, 0.15, 0.75, -4.0,
							-3.7, 1.3, -4.0, 0.0, 0.90, -4.0, -0.15, 0.75, -4.0,
							-3.7, 0.2, -4.0, 0.0, 0.60, -4.0, -0.15, 0.75, -4.0,

							3.7, 1.3, 4.0, 0.0, 0.90, 4.0, 0.15, 0.75, 4.0,
							3.7, 0.2, 4.0, 0.0, 0.60, 4.0, 0.15, 0.75, 4.0,
							-3.7, 1.3, 4.0, 0.0, 0.90, 4.0, -0.15, 0.75, 4.0,
							-3.7, 0.2, 4.0, 0.0, 0.60, 4.0, -0.15, 0.75, 4.0,

							-4.0, 1.3, 3.7, -4.0, 0.90, 0.0, -4.0, 0.75, 0.15,
							-4.0, 0.2, 3.7, -4.0, 0.60, 0.0, -4.0, 0.75, 0.15,
							-4.0, 1.3, -3.7, -4.0, 0.90, 0.0, -4.0, 0.75, -0.15,
							-4.0, 0.2, -3.7, -4.0, 0.60, 0.0, -4.0, 0.75, -0.15,

							4.0, 1.3, 1.7, 4.0, 0.90, -1.0, 4.0, 0.75, -0.85,
							4.0, 0.2, 1.7, 4.0, 0.60, -1.0, 4.0, 0.75, -0.85,
							4.0, 1.3, -3.7, 4.0, 0.90, -1.0, 4.0, 0.75, -1.15,
							4.0, 0.2, -3.7, 4.0, 0.60, -1.0, 4.0, 0.75, -1.15,

							-3.89, 1.5, -4.0, -4.0, 1.5, -3.89, -4.0, -1.5, -4.0,
							3.89, 1.5, -4.0, 4.0, 1.5, -3.89, 4.0, -1.5, -4.0, 
							3.89, 1.5, 4.0, 4.0, 1.5, 3.89, 4.0, -1.5, 4.0, 
							4.0, 1.5, 2.0, 4.0, 1.5, 1.83, 4.0, -1.5, 1.915, 
							-3.89, 1.5, 4.0, -4.0, 1.5, 3.89, -4.0, -1.5, 4.0" 
					# Diamond gate
					+Shape
						shader: @shaders/selflit_shader
						draw: 'Polygon'
						positions: +Xyzs"
							4.5,  0.75, 3.8,
							4.25,  1.3, 3.0,
							4.0, 0.75, 2.2,
							4.25,  0.2, 3.0"
						colors: +Colors"
							1.0,  0.0,  0.0, 1.0, 
							0.0,  1.0,  0.0, 1.0, 
							0.0,  0.0,  1.0, 1.0, 
							1.0,  1.0,  1.0, 1.0"
					+@horse
						origin: +Xyz(2., 0.0, -1.5)
						orientation: +Quat.SetAngleAxis(-1.5708, 0., 1., 0.)
					+@horse
						origin: +Xyz(1.5, 0.0, 1.5)
						orientation: +Quat.SetAngleAxis(-1.5708, 0., 1., 0.)
			# Jolly
			+@horse
				origin: +Xyz(4.0, 0.0, -1.3)
				.OrientTo(+Xyz(0.0, 0.0, -5.5))
				#$.camera.following = this
				#$.camera.origin = +Xyz(0., 0., 0.)
			@fighter
				origin: +Xyz(0.0, 1., 6.)
				orientation: +Quat
			@earth
				origin: +Xyz(-3.0, 2., 1.0)
				orientation: +Quat
			@flamingo
				origin: +Xyz(4., 2., 6.)
				orientation: +Quat
			@bloblight
				origin: +Xyz(-4., 7., 10.)
				
	camera: +Camera
		origin: +Xyz(0., 2., 5.)
		yaw: 0.
		spinrate: 0.
		velocity: 0.

		shader: @shaders/diffuse_shader
		
	render: +List using '<<'
		###
		+Camera
			target: +Window
			shader: @shaders/diffuse_shader
			following: @earth
			origin: +Xyz(0., 1., 0.)
		###
		$.camera
		+Camera
			viewport: +Rect(0,0,300,300)
			shader: @shaders/diffuse_shader
			following: @earth
			origin: +Xyz(0., 1., 0.)
		+Camera
			viewport: +Rect(900,0,300,300)
			shader: @shaders/diffuse_shader
			following: @flamingo
			scale: +Xyz(1000.,1000.,1000.)
			origin: +Xyz(0., 0., 0.)
			orientation: +Quat.SetAngleAxis(Float.pi, 0., 1., 0.)

	input: +Type
		keyDown: +Type
			key_0: []
				@earth .origin.x = @earth .origin.x + 0.25
			key_up: []
				$.camera.velocity = 4.
			key_down: []
				$.camera.velocity = -4.
			key_left: []
				$.camera.spinrate = 4.
			key_right: []
				$.camera.spinrate = -4.
		keyUp: +Type
			key_0: []
				@earth .origin.x = @earth .origin.x - 0.25
			key_up: []
				$.camera.velocity = 0.
			key_down: []
				$.camera.velocity = 0.
			key_left: []
				$.camera.spinrate = 0.
			key_right: []
				$.camera.spinrate = 0.
	animate: [dt]
		@earth .animate(dt)
		@flamingo .animate(dt)
		$.camera
			.yaw = (.yaw + dt*.spinrate).Modulus(2.*Float.pi) if .spinrate!=0.
			.origin.Add(-.velocity * dt * .yaw.Sin, 0., -.velocity * dt * .yaw.Cos)
			.orientation.SetAngleAxis(.yaw, 0., 1., 0.)
